% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distributions.R
\name{tfd_multinomial}
\alias{tfd_multinomial}
\title{Multinomial distribution}
\usage{
tfd_multinomial(
  total_count,
  logits = NULL,
  probs = NULL,
  validate_args = FALSE,
  allow_nan_stats = TRUE,
  name = "Multinomial"
)
}
\arguments{
\item{total_count}{Non-negative floating point tensor with shape broadcastable
to \verb{[N1,..., Nm]} with \code{m >= 0}. Defines this as a batch of
\verb{N1 x ... x Nm} different Multinomial distributions. Its components
should be equal to integer values.}

\item{logits}{Floating point tensor representing unnormalized log-probabilities
of a positive event with shape broadcastable to
\verb{[N1,..., Nm, K]} \code{m >= 0}, and the same dtype as \code{total_count}. Defines
this as a batch of \verb{N1 x ... x Nm} different \code{K} class Multinomial
distributions. Only one of \code{logits} or \code{probs} should be passed in.}

\item{probs}{Positive floating point tensor with shape broadcastable to
\verb{[N1,..., Nm, K]} \code{m >= 0} and same dtype as \code{total_count}. Defines
this as a batch of \verb{N1 x ... x Nm} different \code{K} class Multinomial
distributions. \code{probs}'s components in the last portion of its shape
should sum to \code{1}. Only one of \code{logits} or \code{probs} should be passed in.}

\item{validate_args}{Logical, default FALSE. When TRUE distribution parameters are checked
for validity despite possibly degrading runtime performance. When FALSE invalid inputs may
silently render incorrect outputs. Default value: FALSE.}

\item{allow_nan_stats}{Logical, default TRUE. When TRUE, statistics (e.g., mean, mode, variance)
use the value NaN to indicate the result is undefined. When FALSE, an exception is raised if
one or more of the statistic's batch members are undefined.}

\item{name}{name prefixed to Ops created by this class.}
}
\value{
a distribution instance.
}
\description{
This Multinomial distribution is parameterized by \code{probs}, a (batch of)
length-\code{K} \code{prob} (probability) vectors (\code{K > 1}) such that
\code{tf.reduce_sum(probs, -1) = 1}, and a \code{total_count} number of trials, i.e.,
the number of trials per draw from the Multinomial. It is defined over a
(batch of) length-\code{K} vector \code{counts} such that
\code{tf$reduce_sum(counts, -1) = total_count}. The Multinomial is identically the
Binomial distribution when \code{K = 2}.
}
\details{
Mathematical Details

The Multinomial is a distribution over \code{K}-class counts, i.e., a length-\code{K}
vector of non-negative integer \verb{counts = n = [n_0, ..., n_\{K-1\}]}.
The probability mass function (pmf) is,\preformatted{pmf(n; pi, N) = prod_j (pi_j)**n_j / Z
Z = (prod_j n_j!) / N!
}

where:
\itemize{
\item \verb{probs = pi = [pi_0, ..., pi_\{K-1\}]}, \code{pi_j > 0}, \verb{sum_j pi_j = 1},
\item \code{total_count = N}, \code{N} a positive integer,
\item \code{Z} is the normalization constant, and,
\item \verb{N!} denotes \code{N} factorial.
}

Distribution parameters are automatically broadcast in all functions; see
examples for details.

Pitfalls

The number of classes, \code{K}, must not exceed:
\itemize{
\item the largest integer representable by \code{self$dtype}, i.e.,
\code{2**(mantissa_bits+1)} (IEE754),
\item the maximum \code{Tensor} index, i.e., \code{2**31-1}.
}

Note: This condition is validated only when \code{validate_args = TRUE}.
}
\seealso{
For usage examples see e.g. \code{\link[=tfd_sample]{tfd_sample()}}, \code{\link[=tfd_log_prob]{tfd_log_prob()}}, \code{\link[=tfd_mean]{tfd_mean()}}.

Other distributions: 
\code{\link{tfd_autoregressive}()},
\code{\link{tfd_batch_reshape}()},
\code{\link{tfd_bates}()},
\code{\link{tfd_bernoulli}()},
\code{\link{tfd_beta_binomial}()},
\code{\link{tfd_beta}()},
\code{\link{tfd_binomial}()},
\code{\link{tfd_categorical}()},
\code{\link{tfd_cauchy}()},
\code{\link{tfd_chi2}()},
\code{\link{tfd_chi}()},
\code{\link{tfd_cholesky_lkj}()},
\code{\link{tfd_continuous_bernoulli}()},
\code{\link{tfd_deterministic}()},
\code{\link{tfd_dirichlet_multinomial}()},
\code{\link{tfd_dirichlet}()},
\code{\link{tfd_empirical}()},
\code{\link{tfd_exp_gamma}()},
\code{\link{tfd_exp_inverse_gamma}()},
\code{\link{tfd_exponential}()},
\code{\link{tfd_gamma_gamma}()},
\code{\link{tfd_gamma}()},
\code{\link{tfd_gaussian_process_regression_model}()},
\code{\link{tfd_gaussian_process}()},
\code{\link{tfd_generalized_normal}()},
\code{\link{tfd_geometric}()},
\code{\link{tfd_gumbel}()},
\code{\link{tfd_half_cauchy}()},
\code{\link{tfd_half_normal}()},
\code{\link{tfd_hidden_markov_model}()},
\code{\link{tfd_horseshoe}()},
\code{\link{tfd_independent}()},
\code{\link{tfd_inverse_gamma}()},
\code{\link{tfd_inverse_gaussian}()},
\code{\link{tfd_johnson_s_u}()},
\code{\link{tfd_joint_distribution_named_auto_batched}()},
\code{\link{tfd_joint_distribution_named}()},
\code{\link{tfd_joint_distribution_sequential_auto_batched}()},
\code{\link{tfd_joint_distribution_sequential}()},
\code{\link{tfd_kumaraswamy}()},
\code{\link{tfd_laplace}()},
\code{\link{tfd_linear_gaussian_state_space_model}()},
\code{\link{tfd_lkj}()},
\code{\link{tfd_log_logistic}()},
\code{\link{tfd_log_normal}()},
\code{\link{tfd_logistic}()},
\code{\link{tfd_mixture_same_family}()},
\code{\link{tfd_mixture}()},
\code{\link{tfd_multivariate_normal_diag_plus_low_rank}()},
\code{\link{tfd_multivariate_normal_diag}()},
\code{\link{tfd_multivariate_normal_full_covariance}()},
\code{\link{tfd_multivariate_normal_linear_operator}()},
\code{\link{tfd_multivariate_normal_tri_l}()},
\code{\link{tfd_multivariate_student_t_linear_operator}()},
\code{\link{tfd_negative_binomial}()},
\code{\link{tfd_normal}()},
\code{\link{tfd_one_hot_categorical}()},
\code{\link{tfd_pareto}()},
\code{\link{tfd_pixel_cnn}()},
\code{\link{tfd_poisson_log_normal_quadrature_compound}()},
\code{\link{tfd_poisson}()},
\code{\link{tfd_power_spherical}()},
\code{\link{tfd_probit_bernoulli}()},
\code{\link{tfd_quantized}()},
\code{\link{tfd_relaxed_bernoulli}()},
\code{\link{tfd_relaxed_one_hot_categorical}()},
\code{\link{tfd_sample_distribution}()},
\code{\link{tfd_sinh_arcsinh}()},
\code{\link{tfd_skellam}()},
\code{\link{tfd_spherical_uniform}()},
\code{\link{tfd_student_t_process}()},
\code{\link{tfd_student_t}()},
\code{\link{tfd_transformed_distribution}()},
\code{\link{tfd_triangular}()},
\code{\link{tfd_truncated_cauchy}()},
\code{\link{tfd_truncated_normal}()},
\code{\link{tfd_uniform}()},
\code{\link{tfd_variational_gaussian_process}()},
\code{\link{tfd_vector_diffeomixture}()},
\code{\link{tfd_vector_exponential_diag}()},
\code{\link{tfd_vector_exponential_linear_operator}()},
\code{\link{tfd_vector_laplace_diag}()},
\code{\link{tfd_vector_laplace_linear_operator}()},
\code{\link{tfd_vector_sinh_arcsinh_diag}()},
\code{\link{tfd_von_mises_fisher}()},
\code{\link{tfd_von_mises}()},
\code{\link{tfd_weibull}()},
\code{\link{tfd_wishart_linear_operator}()},
\code{\link{tfd_wishart_tri_l}()},
\code{\link{tfd_wishart}()},
\code{\link{tfd_zipf}()}
}
\concept{distributions}
