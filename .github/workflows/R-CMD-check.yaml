on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # schedule:
  #   - cron: '0 1 * * MON'

name: R-CMD-check

defaults:
  run:
    shell: Rscript {0}

jobs:
  R-CMD-check:
    name: ${{ matrix.os }}, tfp-${{ matrix.tfp }}, tf-${{matrix.tf}}), r-${{ matrix.r }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: 'ubuntu-latest' , tf: 'default', tfp: 'default', r: 'release'}
          - {os: 'windows-latest', tf: 'default', tfp: 'default', r: 'release'}
          - {os: 'macOS-latest'  , tf: 'default', tfp: 'default', r: 'release'}

    runs-on: ${{ matrix.os }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: 'true'
      R_COMPILE_AND_INSTALL_PACKAGES: 'never'
      PIP_NO_WARN_SCRIPT_LOCATION: false
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::remotes
          needs: check

      - name: Install R pkg
        run: remotes::install_local(dependencies = TRUE, force = TRUE)

      - name: Install tfds
        run: remotes::install_github('rstudio/tfds')

      - name: Install Miniconda
        run: reticulate::install_miniconda()

      - name: Install TensorFlow Probability
        run: |
          tfprobability::install_tfprobability(
            version='${{ matrix.tfp }}', tensorflow='${{ matrix.tf }}-cpu',
            extra_packages = c('IPython', 'tensorflow_datasets'))

      - uses: r-lib/actions/check-r-package@v2
